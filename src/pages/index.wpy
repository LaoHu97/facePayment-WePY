<style lang="less">
.userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 65rpx;
    margin-bottom: 8rpx;
}

.userinfo-avatar {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    border: 2rpx solid #fff;
}

.userinfo-nickname {
    color: #333;
    margin-top: 6rpx;
}
.btn-area {
    padding: 8px 15px;
}
</style>
<template>
<view class="container">
  <view class="userinfo">
    <image class="userinfo-avatar" wx:if="{{userInfo.avatarUrl}}" src="{{ userInfo.avatarUrl }}" background-size="cover" />
    <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
  </view>
  <view class="btn-area">
    <button type="primary" bindtap="addCard">注册新会员</button>
  </view>
  <view class="btn-area">
    <button bindtap="bindCard">老会员绑定</button>
  </view>
  <foot></foot>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  service
} from '../config.js'
// 引入组件
import Foot from '../components/foot'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '领取会员卡'
  }
  components = {
    foot: Foot
  }

  data = {
    userInfo: {
      avatarUrl: '',
      nickName: '加载中...'
    }
  }

  computed = {}

  methods = {
    bindCard() {
      wepy.navigateTo({
        url: 'oldActivation'
      })
    },
    addCard() {
      let _this = this
      wepy.showLoading({
        title: '加载中'
      })
      wepy.request({
        url: service.addCard,
        data: {
          mid: '66'
        },
        method: 'POST',
        success(res) {
          let data = {
            timestamp: res.data.timestamp,
            nonce_str: res.data.nonce_str,
            outer_str: res.data.outer_str,
            signature: res.data.signature
          }
          wepy.addCard({
            cardList: [{
              cardId: res.data.card_id,
              cardExt: JSON.stringify(data)
            }],
            success: function(res) {
              wepy.hideLoading()
              _this.openCard(res)
            },
            fail: function(res) {
              wepy.hideLoading()
            }
          })
        },
        fail(res) {
          console.log(res.data)
        }
      })
    }
  }
  openCard(res) {
    wepy.showLoading({
      title: '加载中'
    })
    let cardId = res.cardList[0].cardId
    wepy.request({
      url: service.decryptCode,
      data: {
        mid: '66',
        encrypt_code: res.cardList[0].code
      },
      method: 'POST',
      success(res) {
        console.log(res)
        wepy.openCard({
          cardList: [{
            cardId: cardId,
            code: res.data.cardCode
          }],
          success: function(res) {
            wepy.hideLoading()
          },
          fail: function(res) {
            console.log('打开会员卡失败，原因：' + res.errMsg)
            wepy.hideLoading()
          }
        })
      }
    })
  }
  events = {

  }
  getMiniMem() {
    wepy.request({
      url: service.getMiniMem,
      data: {
        mid: '66',
        unionId: '123213213'
      },
      method: 'POST',
      success(res) {

      }
    })
  }
  onLoad() {
    // let self = this
    // this.$parent.getUserInfo(function(data) {
    //   if (data.userInfo) {
    //     self.userInfo = data.userInfo
    //     self.$apply()
    //     wepy.request({
    //       url: service.getUserInfo,
    //       data: {
    //         data
    //       },
    //       method: 'POST',
    //       success(res) {
    //         console.log(res)
    //         if (res.data) {
    //           self.getMiniMem()
    //         }
    //       }
    //     })
    //   }
    // })
  }
  onShow() {
    let self = this
    wepy.getUserInfo({
      success(res) {
        if (res.userInfo) {
          self.userInfo = res.userInfo
          self.$apply()
          wepy.request({
            url: service.getMiniMem,
            data: {
              mid: '66',
              openId: wepy.getStorageSync('openId'),
              appid: 'wx32a0348172f66270'
            },
            method: 'POST',
            success(res) {

            }
          })
        }
      }
    })
  }
  onShareAppMessage(res) {
    return this.$parent.onShareAppMessage('您有一张会员卡待领取')
  }
}
</script>
